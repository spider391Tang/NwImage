#include "../ggivnc/config.h"
#include "MLVNC.h"
#include <QDebug>
#include "../ggivnc/MLVNCBuffer.h"

extern int ggivnc_main(int argc, char **argv);
extern void setGgivncTargetFrameBuffer( unsigned char* buf );

extern boost::signals2::connection connectToGgivncBufferRenderedSignal
    (
    const BufferRenderedSignalType::slot_type& aSlot
    );

namespace MLLibrary {

MLVNC* MLVNC::mInstance = NULL;

void MLVNC::startRender()
{
    qDebug() << "startFly";
    char* aa[] = {"ggivnc","10.128.60.135"};
    // MLLibrary::MLVNC* vnc = new MLLibrary::MLVNC;
    // set environment
    ggivnc_main( 2, aa);
}

void MLVNC::stopRender()
{

}

void MLVNC::onHandleGgivncSignal()
{
     qDebug() << "Calling mVncEvent";
     mVncEvent();
}

void MLVNC::setFrameBufWidth( int width )
{
    mWidth = width;
}

void MLVNC::setFrameBufHeight( int height )
{
    mHeight = height;
}

boost::signals2::connection MLVNC::connectToMlvncEvent
    (
    const VNCSignalType::slot_type& aSlot
    )
{
    return mVncEvent.connect( aSlot );
}

void MLVNC::connect( std::string& host, int port )
{
    mHost = host;
    mPort = port;
}

void MLVNC::setUpdateFPS( int frame_per_second )
{
    mFps = frame_per_second;
}


void MLVNC::repaint()
{
    
}

void MLVNC::disconnect()
{

}

void MLVNC::setFrameBufferPtr( unsigned char* buffer )
{
    setGgivncTargetFrameBuffer( buffer );
}

void MLVNC::setColorDepth( MLVNCColorDepth color_depth )
{
    mColorDepth = color_depth;
}

void MLVNC::setColorFormat( MLVNCColorFormat color_format )
{
    mColorFormat = color_format;
}

MLVNC::~MLVNC()
{

}

MLVNC::MLVNC()
{

}

void MLVNC::pwrp()
// don't delete the following line as it's needed to preserve source code of this autogenerated element
// section 127-0-1-1-584d88fa:144b573379b:-8000:0000000000000B84 begin
{
}
// section 127-0-1-1-584d88fa:144b573379b:-8000:0000000000000B84 end
// don't delete the previous line as it's needed to preserve source code of this autogenerated element

void MLVNC::init()
// don't delete the following line as it's needed to preserve source code of this autogenerated element
// section 127-0-1-1-584d88fa:144b573379b:-8000:0000000000000B86 begin
{
    connectToGgivncBufferRenderedSignal( boost::bind( &MLVNC::onHandleGgivncSignal,this ) );
}
// section 127-0-1-1-584d88fa:144b573379b:-8000:0000000000000B86 end
// don't delete the previous line as it's needed to preserve source code of this autogenerated element

void MLVNC::pwrdn()
// don't delete the following line as it's needed to preserve source code of this autogenerated element
// section 127-0-1-1-584d88fa:144b573379b:-8000:0000000000000B88 begin
{
}
// section 127-0-1-1-584d88fa:144b573379b:-8000:0000000000000B88 end
// don't delete the previous line as it's needed to preserve source code of this autogenerated element


} /* End of namespace MLLibrary */
