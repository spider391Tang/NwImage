#include "../ggivnc/config.h"
#include "MLVNC.h"
#include <QDebug>
#include <boost/function.hpp>

extern int ggivnc_main(int argc, char **argv);
extern void register_signal_handle_function( boost::function<void (const std::string&)> f );

namespace MLLibrary {

MLVNC* MLVNC::mInstance = NULL;


void MLVNC::startRender()
{
    qDebug() << "startFly";
    char* aa[] = {"ggivnc","10.128.60.135"};
    // MLLibrary::MLVNC* vnc = new MLLibrary::MLVNC;
    // set environment
    ggivnc_main( 2, aa);
}

void MLVNC::onHandleSignal( const std::string& msg )
{
    qDebug() << msg.c_str();
}

MLVNC::~MLVNC()
{
}

MLVNC::MLVNC()
{

}

void MLVNC::pwrp()
// don't delete the following line as it's needed to preserve source code of this autogenerated element
// section 127-0-1-1-584d88fa:144b573379b:-8000:0000000000000B84 begin
{
}
// section 127-0-1-1-584d88fa:144b573379b:-8000:0000000000000B84 end
// don't delete the previous line as it's needed to preserve source code of this autogenerated element

void MLVNC::init()
// don't delete the following line as it's needed to preserve source code of this autogenerated element
// section 127-0-1-1-584d88fa:144b573379b:-8000:0000000000000B86 begin
{

    boost::function<void (const std::string&)> f = boost::bind( &MLVNC::onHandleSignal,this, _1 );
    register_signal_handle_function( f );

        //  boost::bind( &MLLibrary::MLVNC::onHandleSignal,MLLibrary::MLVNC::getInstance(), _1 ) );

}
// section 127-0-1-1-584d88fa:144b573379b:-8000:0000000000000B86 end
// don't delete the previous line as it's needed to preserve source code of this autogenerated element

void MLVNC::pwrdn()
// don't delete the following line as it's needed to preserve source code of this autogenerated element
// section 127-0-1-1-584d88fa:144b573379b:-8000:0000000000000B88 begin
{
}
// section 127-0-1-1-584d88fa:144b573379b:-8000:0000000000000B88 end
// don't delete the previous line as it's needed to preserve source code of this autogenerated element


} /* End of namespace MLLibrary */
